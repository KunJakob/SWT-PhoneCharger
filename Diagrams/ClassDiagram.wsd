@startuml
class StationControl
{
    - _state : LadeskabState 
    - _oldId : int 
    - _charger : IChargeControl
    - _door : IDoor 
    - _logger : ILogger
    - _display : IDisplay
    - _rfidReader : IRfidReader


    + StationControl(IDoor, IChargeControl, IRfidReader, IDisplay, ILogger) 

    - RfidDetected(int) : void
     # HandleDoorChange(object, DoorOpenEventArgs) : void
     # HandleRfidRead(object, RfidReadEventArgs) : void
}


/' Door '/

interface IDoor
{
    + DoorChangeEvent(object, DoorOpenEventArgs) : EventHandler
    + LockDoor() : void
    + UnlockDoor() : void
    + OpenDoor() : bool
    + CloseDoor() : bool
}

class Door 
{
    - _lockState : LockState
    # //OnDoorChange//(DoorOpenEventArgs) : void
    + Door() :
}


IDoor <|-- Door
StationControl --> IDoor

/' RFID READER '/

interface IRfidReader{

    + _SC : StationControl 
    + OnRfidRead(int) : void   
}

class RfidReader
{
    + _id : int  
}

IRfidReader <-- StationControl
IRfidReader <|-- RfidReader

/' USB Charger '/
class UsbChargerSimulator
{
    - MaxCurrent : const double
    - FullyChargedCurrent : const double
    - OverloadCurrent : const double
    - ChargeTimeMinutes : const int
    - CurrentTickInterval : const int
    - _overload : bool
    - _charging : bool
    - _timer : timer
    - _ticksSinceStart : int

    + CurrentValueEvent : Event

    + UsbChargerSimulator() :
    + SimulateConnected(Bool) : void
    + SimulateOverload(Bool) : void

    - TimerOnElapsed(Object, ElapsedEventArgs): void
    - OnNewCurrent() : void
}

interface IUsbCharger
{
    +CurrentValue: Double
    +Connected: bool
    +StartCharge(): void
    +StopCharge(): void
}

IUsbCharger <|-- UsbChargerSimulator

/' ChargeControl '/

interface IChargeControl
{
    +Connected: bool
    +StartCharge(): void
    +StopCharge(): void
}
class ChargeControl
{
    - _charger : IUsbCharger
    - _display : IDisplay
    # //CurrentChangeHandler//(Object, CurrentEventArgs) : void
    + ChargeControl(IUsbCharger, IDisplay)
}
IChargeControl <|-- ChargeControl
StationControl --> IChargeControl
IUsbCharger <-- ChargeControl
IDisplay <-- ChargeControl
/' Display '/

interface IDisplay
{
    + NotifyCharge(string) : void
    + NotifyStation(string) : void
    + ReadInput() : string
}

class Display
{

    - _PreviousCallStringCharge : string
    - _PreviousCallStringStation : string
}
    IDisplay <|-- Display
    StationControl --> IDisplay

/' Logger '/

class Logger
{
    - _filepath : string
    - _filename : string
    - GetFormattedTime() : string
    + Logger(string, string) : 

}


interface ILogger
{
    + WriteToLog(string) : void
}

ILogger <|-- Logger
StationControl --> ILogger

@enduml